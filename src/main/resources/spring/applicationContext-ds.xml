<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- 属性文件存放位置 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<!-- 统计监控数据库访问性能过滤器 -->
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="slowSqlMillis" value="3000" />
		<property name="logSlowSql" value="true" />
	</bean>
	
	<!-- 从库数据源配置 -->
	<bean id="slaveDS" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.slave.url}" />
		<property name="username" value="${jdbc.slave.user}" />
		<property name="password" value="${jdbc.slave.password}" />
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="100" />
		<property name="maxWait" value="60000" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT SYSDATE FROM DUAL" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<property name="filters" value="stat" />
		<property name="connectionInitSqls" value="set names utf8mb4;"/>
	</bean>
	<bean id="readSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="slaveDS" />
		<property name="configLocation" value="classpath:mapper/MyBatisConfig.xml" />
	</bean>
	<bean id="readSqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg index="0" ref="readSqlSessionFactory" />
	</bean>
	<bean id="readJdbc" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="slaveDS" />
	</bean>
	<bean id="jdbcCall" scope="prototype" class="org.springframework.jdbc.core.simple.SimpleJdbcCall">
		<constructor-arg ref="slaveDS" />
	</bean>
	
	<!-- 主库数据源配置 -->
	<bean id="masterDS" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.master.url}" />
		<property name="username" value="${jdbc.master.user}" />
		<property name="password" value="${jdbc.master.password}" />
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="10" />
		<property name="maxWait" value="60000" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT SYSDATE FROM DUAL" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<property name="filters" value="stat" />
		<property name="connectionInitSqls" value="set names utf8mb4;"/>
	</bean>
	<bean id="writeSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="masterDS" />
		<property name="configLocation" value="classpath:mapper/MyBatisConfig.xml" />
	</bean>
	<bean id="writeSqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg index="0" ref="writeSqlSessionFactory" />
		<constructor-arg index="1" value="SIMPLE" />
	</bean>
	<bean id="writeJdbc" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="masterDS" />
	</bean>
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="masterDS"></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
</beans>